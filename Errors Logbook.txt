Problem 1: should use element instead of component when rendering a route
Problem 2: Should  name react component with upper case in the first letter
Problem 3: createBrowserRouter should format in this way
([{

},
{


}
])
================
Problem 4: Navigate around the pages:
const router = createBrowserRouter([{
  path: "/",
  element: (<Homepage />),
},
{
  // element: <p>Heelo</p>,
  path: "movies",
  element: (<MoviesLib />)

}])
==========================
Problem 4: when using props.map but it say it is not a function, need to check the props data, if it is an array
data type already, try not to transfer it to dataArray = data.data this quick, only do this when you about to map them.
better not do this in other functions, especially in the case when you have to pass it through many funcitons, you need to use it once you pass it to the function
if you pass it to the function and then in the passed function use it again to pass in to the other function, errors are more likely to occur
Problem 5: 
const [records, setRecords] = useState([])

    const Filter = (event) => {
        setRecords(props.data.filter(f => f.title.toLowerCase().includes(event.target.value)))
    }

<input type="text" className='form-control' onChange={Filter} placeholder='Search movie name' />
onChange function is called everytime the input value is changed, when the Filter function is called, it will filter the data in the data that we fetched before, and
use useState to set the filtered data to the record.
In this case, we need to change the mapping object from props to records, as records is all the fetch data,
we want to display the filtered data:
{records.map((prop) => (

                            <tr key={prop.imdbID} >

                                <td>{prop.title}</td>
                                <td>{prop.year}</td>
                                <td>{prop.imdbRating}</td>
                                <td>{prop.classification}</td>
                                <td>Inactive link</td>
                            </tr>

                        ))}
so every records is changed, the table value will also be updated.

=========
Problem: dont pass prop.imdbID to quick to the func, should pass prop to the func at first the inside the func
use prop.imdbID, shoud work.
======================================
Problem:
use ` ` when you mix string and variable together instead of ''
e.g: console.log(`http://sefdb02.qut.edu.au:3000/movies/data/${encodeURIComponent(prop.imdbID)}`)
====================================
const: cannot be redelcared, but doesnt mean cannot be changed

============================================
When encounter the problem of passing an fetched object to a func but it turns out another obj like this: {prototype}
use async function, don't use regular func. And also keep the parameters name same when call the func and define the func.
=======================================
When call a handleSubmit func that has code like event.preventDefault, dont call it in onClick component of a button, 
insert in on <form onSubmit={handleSubmit}>...button</form>
===============================================
use this:
 {headlines && (
                <div>
                    <p>{headlines.title}</p>
                    <p>{headlines.year}</p>
                    <p>{headlines.country}</p>
                    {mapPrincipals()}
                </div>
            )}
Instead of this: 
{/* {headlines && <p>{headlines.title}</p> && <p>{headlines.year}</p> && <p>{headlines.country}</p> && mapPrincipals()} */}
The second one keep doing stuff like checking if n is true, if n +1 is true n +2 ... at last it will only return the value of mapPrincipals() after going through all the stuff.
======================================================
How you should use useEffect:
useEffect(
        () => {
            const fetchData = async () => {
                try {
                    const response = await fetch(`http://sefdb02.qut.edu.au:3000/movies/data/${encodeURIComponent(data)}`)
                    const data1 = await response.json();
                    // const country = await data1.country;

                    setHeadlines(data1)
                    console.log(headlines)
                }
                catch (error) {
                    setError(error)
                    console.log(error)
                }
                finally {
                    setLoading(false)
                }


            }
            fetchData(); .//call the func outside of func, and also inside of the useEffect
        }, [data]

    )
=========================================
when mapping objects cants see the data, try to see if you use the correct bracket,
this is what it supposes to look like:
principal_arr.map(() => (....))
instead of: principal_arr.map(() => {....})
not curly bracket
also, try to use it in the only when you need to do the iteration mapping, do include other objs 
that is not an array in the mapping seciton, they will be repetitive showed.
====================================================
When you use localStorage.getItem("abc"), dont set it using useState, it will causes too many re-render errors
=================================================
Dont clear the data right after the mapping func is called as the mapping can be unsync.